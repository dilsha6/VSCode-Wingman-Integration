{"version":3,"sources":["file:///C:/Users/dilsh/custom-vscode-wingman/vscode/src/cli.ts","cli.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,OAAO,oBAAoB,CAAC,CAAC,iEAAiE;AAC9F,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAC;AACpC,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAClD,OAAO,EAAE,uBAAuB,EAAE,MAAM,uBAAuB,CAAC;AAChE,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAE9C,MAAM,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAE1D,MAAM;AACN,MAAM,gBAAgB,GAAG,MAAM,uBAAuB,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE,EAAE,eAAe,EAAE,SAAS,EAAE,CAAC,CAAC;AACnK,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,uDAAuD;AAE5H,0BAA0B;AAC1B,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAE3B,+CAA+C;AAC/C,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC;AAEhC,gBAAgB;AAChB,MAAM,YAAY,EAAE,CAAC;AAErB,cAAc;AACd,MAAM,MAAM,CAAC,uBAAuB,CAAC,CAAC","file":"cli.js","sourceRoot":"file:///C:/Users/dilsh/custom-vscode-wingman/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport './bootstrap-cli.js'; // this MUST come before other imports as it changes global state\r\nimport { dirname } from 'path';\r\nimport { fileURLToPath } from 'url';\r\nimport { configurePortable } from './bootstrap-node.js';\r\nimport { bootstrapESM } from './bootstrap-esm.js';\r\nimport { resolveNLSConfiguration } from './vs/base/node/nls.js';\r\nimport { product } from './bootstrap-meta.js';\r\n\r\nconst __dirname = dirname(fileURLToPath(import.meta.url));\r\n\r\n// NLS\r\nconst nlsConfiguration = await resolveNLSConfiguration({ userLocale: 'en', osLocale: 'en', commit: product.commit, userDataPath: '', nlsMetadataPath: __dirname });\r\nprocess.env['VSCODE_NLS_CONFIG'] = JSON.stringify(nlsConfiguration); // required for `bootstrap-esm` to pick up NLS messages\r\n\r\n// Enable portable support\r\nconfigurePortable(product);\r\n\r\n// Signal processes that we got launched as CLI\r\nprocess.env['VSCODE_CLI'] = '1';\r\n\r\n// Bootstrap ESM\r\nawait bootstrapESM();\r\n\r\n// Load Server\r\nawait import('./vs/code/node/cli.js');\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport './bootstrap-cli.js'; // this MUST come before other imports as it changes global state\r\nimport { dirname } from 'path';\r\nimport { fileURLToPath } from 'url';\r\nimport { configurePortable } from './bootstrap-node.js';\r\nimport { bootstrapESM } from './bootstrap-esm.js';\r\nimport { resolveNLSConfiguration } from './vs/base/node/nls.js';\r\nimport { product } from './bootstrap-meta.js';\r\n\r\nconst __dirname = dirname(fileURLToPath(import.meta.url));\r\n\r\n// NLS\r\nconst nlsConfiguration = await resolveNLSConfiguration({ userLocale: 'en', osLocale: 'en', commit: product.commit, userDataPath: '', nlsMetadataPath: __dirname });\r\nprocess.env['VSCODE_NLS_CONFIG'] = JSON.stringify(nlsConfiguration); // required for `bootstrap-esm` to pick up NLS messages\r\n\r\n// Enable portable support\r\nconfigurePortable(product);\r\n\r\n// Signal processes that we got launched as CLI\r\nprocess.env['VSCODE_CLI'] = '1';\r\n\r\n// Bootstrap ESM\r\nawait bootstrapESM();\r\n\r\n// Load Server\r\nawait import('./vs/code/node/cli.js');\r\n"]}